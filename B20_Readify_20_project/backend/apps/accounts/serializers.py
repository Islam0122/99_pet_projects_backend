from rest_framework import serializers
from drf_spectacular.utils import extend_schema_field
from .models import TGUser


class TGUserSerializer(serializers.ModelSerializer):
    streak_status = serializers.SerializerMethodField()
    member_since = serializers.SerializerMethodField()

    class Meta:
        model = TGUser
        fields = [
            "id",
            "telegram_id",
            "username",
            "xp",
            "level",
            "rank",
            "total_read_books",
            "streak_days",
            "streak_status",
            "last_read_date",
            "last_active",
            "member_since",
        ]
        read_only_fields = (
            "created_at",
            "last_active",
            "level",
            "rank",
            "streak_days",
        )

    @extend_schema_field(serializers.CharField)
    def get_streak_status(self, obj):
        """–ö—Ä–∞—Å–∏–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ streak‚Äô–∞"""
        if obj.streak_days == 0:
            return "–ù–µ –Ω–∞—á–∏–Ω–∞–ª streak üå±"
        elif obj.streak_days < 3:
            return f"–ù–∞—á–∞–ª streak ‚Äî {obj.streak_days} –¥–Ω—è –ø–æ–¥—Ä—è–¥ ‚ö°"
        elif obj.streak_days < 7:
            return f"–ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç streak ‚Äî {obj.streak_days} –¥–Ω–µ–π üî•"
        else:
            return f"–õ–µ–≥–µ–Ω–¥–∞ streak ‚Äî {obj.streak_days} –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ üëë"

    @extend_schema_field(serializers.CharField)
    def get_member_since(self, obj):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        return obj.created_at.strftime("%d.%m.%Y, %H:%M") if obj.created_at else None

    def update(self, instance, validated_data):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç XP, —É—Ä–æ–≤–µ–Ω—å, –∑–≤–∞–Ω–∏–µ –∏ last_active"""
        xp_before = instance.xp
        instance = super().update(instance, validated_data)
        if instance.xp != xp_before:
            instance.add_xp(instance.xp - xp_before)
        instance.update_activity()

        return instance
