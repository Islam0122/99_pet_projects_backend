from aiogram import Router, types, F
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
# from api.books import load_book,fetch_chapter
from keyboards.inline_keyboards import return_menu_kb
from aiogram.filters import CommandObject, Command

book_router = Router()
# photo = "AgACAgIAAxkBAAIBXmjyji-cVZO1zhue4OhyMYaTX9UtAAIL-DEbw-l5S3ATNiEmk1T9AQADAgADeQADNgQ"
photo = "AgACAgIAAxkBAAMDaPKvyEnH5FIT0qqDz0MDw7bDd3EAAgv4MRvD6XlLxL9qsd2EDbkBAAMCAAN5AAM2BA"


text = "‚ùó –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /search\nüìñ –ü—Ä–∏–º–µ—Ä: /search –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä\n‚ö†Ô∏è –ï—Å–ª–∏ –∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è."

@book_router.callback_query(F.data == "search_book")
async def search_book_handler(query: types.CallbackQuery):
    await query.message.edit_caption(caption=text, reply_markup=return_menu_kb())

#
# @book_router.message(Command(commands=["search"]))
# async def search_book(message: types.Message, command: CommandObject):
#     book_name = command.args
#     if not book_name:
#         await message.answer(
#             text
#         )
#         return
#
#     book_data = await load_book(book_name)
#     if not book_data:
#         await message.answer(
#             "üìö –ö–Ω–∏–≥ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", reply_markup=return_menu_kb()
#         )
#         return
#     kb = InlineKeyboardMarkup(inline_keyboard=[
#         [InlineKeyboardButton(text="üìñ –ß–∏—Ç–∞—Ç—å", callback_data=f"read_{book_data['id']}")],
#         [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")]
#     ])
#
#     await message.answer(
#         f"üìö –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞: {book_data['title']} ‚Äî {book_data['author']}",
#         reply_markup=kb
#     )






