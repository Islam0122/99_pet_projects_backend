# Generated by Django 4.2.24 on 2025-10-24 07:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('student', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Month1Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.CharField(choices=[('Введение в Python', 'Введение в Python. Переменные, типы данных'), ('Условные конструкции', 'Условные конструкции (if, else, elif)'), ('Циклы', 'Циклы for, while'), ('Списки', 'Списки, срезы, кортежи'), ('Словари и множества', 'Словари, множества'), ('Функции', 'Функции, *args, **kwargs'), ('Lambda и исключения', 'Lambda, исключения'), ('Файлы', 'Работа с файлами (txt, JSON, CSV)'), ('Алгоритмы', 'Основы алгоритмов (поиск, сортировка)'), ('Мини проект', 'Практика: консольное приложение'), ('ООП', 'Введение в ООП. Классы и объекты'), ('Атрибуты и методы', 'Атрибуты и методы'), ('Наследование', 'Наследование, полиморфизм, инкапсуляция'), ('Магические методы', 'Магические методы'), ('RPG проект', 'Практика: RPG Game'), ('Модули', 'Встроенные и собственные модули'), ('Окружения', 'Виртуальные окружения'), ('Регулярки', 'Регулярные выражения'), ('Финальный проект', 'Итоговый проект месяца')], help_text='Выберите урок, к которому относится задание', max_length=100, verbose_name='Урок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='month1_homeworks', to='student.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Домашняя работа (1 месяц)',
                'verbose_name_plural': 'Домашние работы (1 месяц)',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Month3Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название задания')),
                ('lesson', models.CharField(choices=[('Введение в Django', 'lesson 1: Структура проекта'), ('Первые view, urls', 'lesson 2: Создание view и маршрутов'), ('Django templates / html / css', 'lesson 3: Работа с шаблонами'), ('Модели и база данных', 'lesson 4: Создание моделей и миграций'), ('Практика: блог (CRUD)', 'lesson 5: Практическая работа — блог'), ('Class Based Views, Django Forms', 'lesson 6: Работа с CBV и формами'), ('Django Admin, суперпользователь', 'lesson 7: Настройка админки'), ('Request/Response в Django', 'lesson 8: Основы Request и Response'), ('Аутентификация и авторизация', 'lesson 9: Пользователи и права'), ('Практика: сайт-магазин', 'lesson 10: Практическая работа — магазин'), ('Django Rest Framework. APIView', 'lesson 11: Создание API с DRF'), ('Сериализаторы, валидация данных', 'lesson 12: Работа с сериализаторами'), ('Class Based Views и mixins в DRF', 'lesson 13: CBV и миксины'), ('ViewSets, routers, пагинация', 'lesson 14: ViewSets и маршрутизация'), ('Практика: API для интернет-магазина', 'lesson 15: Практическая работа'), ('Аутентификация и разрешения в DRF', 'lesson 16: Права доступа'), ('Тестирование (pytest, unittest)', 'lesson 17: Тестирование API'), ('Документация API (Swagger)', 'lesson 18: Документирование API'), ('Итоговый проект Bootcamp (сайт or API or бот)', 'lesson 19: Финальный проект'), ('Защита финальных проектов', 'lesson 20: Презентация проектов')], help_text='Выберите урок, к которому относится задание', max_length=100, verbose_name='Урок')),
                ('task_condition', models.TextField(verbose_name='Условие задания')),
                ('grade', models.FloatField(blank=True, null=True, verbose_name='Оценка (из 10)')),
                ('originality_check', models.TextField(blank=True, null=True, verbose_name='Проверка оригинальности')),
                ('is_checked', models.BooleanField(default=False, verbose_name='Проверено')),
                ('github_url', models.URLField(blank=True, null=True, verbose_name='GitHub URL')),
                ('file_presentation', models.FileField(blank=True, null=True, upload_to='presentations/month3/', verbose_name='Файл презентации')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='month3_homeworks', to='student.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Домашняя работа (3 месяц)',
                'verbose_name_plural': 'Домашние работы (3 месяц)',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Month2Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.CharField(choices=[('Создание первого бота', 'lesson 1: Настройка токена и создание первого бота'), ('Обработка сообщений и команд', 'lesson 2: Основы обработки сообщений и команд'), ('Кнопки (Reply и Inline)', 'lesson 3: Добавление кнопок Reply и Inline'), ('FSM: состояния и хранение данных', 'lesson 4: Состояния и хранение данных'), ('Практика: бот-анкета', 'lesson 5: Практическая работа — бот анкета'), ('Подключение базы данных (SQLite)', 'lesson 6: Подключение базы данных'), ('CRUD-операции в БД', 'lesson 7: Создание, чтение, обновление, удаление'), ('Интеграция БД с ботом', 'lesson 8: Связь бота с базой данных'), ('FSMAdmin, админ-панель', 'lesson 9: Работа с FSMAdmin и админкой'), ('Практика: бот-магазин (без оплаты)', 'lesson 10: Практика — магазин бот'), ('Работа с API (requests)', 'lesson 11: Использование API'), ('Web scraping (BS4)', 'lesson 12: Сбор данных с веб-сайтов'), ('Планировщик задач (Aioschedule)', 'lesson 13: Настройка планировщика задач'), ('Middleware, фильтры, флаги', 'lesson 14: Настройка Middleware и фильтров'), ('Практика: бот-новостник или бот-напоминалка', 'lesson 15: Практическая работа'), ('Git/GitHub --> command', 'lesson 16: Основы Git'), ('Git/GitHub / Деплой на сервер (Heroku/VPS)', 'lesson 17: Деплой проекта'), ('Практика: деплой Telegram-бота', 'lesson 18: Практическая работа'), ('Итоговый проект месяца (командная работа)', 'lesson 19: Командная работа'), ('Презентация проектов', 'lesson 20: Презентация результатов')], help_text='Выберите урок, к которому относится задание', max_length=100, verbose_name='Урок')),
                ('title', models.CharField(max_length=255, verbose_name='Название задания')),
                ('task_condition', models.TextField(verbose_name='Условие задания')),
                ('grade', models.FloatField(blank=True, null=True, verbose_name='Оценка (из 10)')),
                ('originality_check', models.TextField(blank=True, null=True, verbose_name='Проверка оригинальности')),
                ('is_checked', models.BooleanField(default=False, verbose_name='Проверено')),
                ('github_url', models.URLField(blank=True, null=True, verbose_name='GitHub URL')),
                ('file_presentation', models.FileField(blank=True, null=True, upload_to='presentations/month2/', verbose_name='Файл презентации')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='month2_homeworks', to='student.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Домашняя работа (2 месяц)',
                'verbose_name_plural': 'Домашние работы (2 месяц)',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Month1HomeworkItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_condition', models.TextField(help_text='Введите условие задания, данное ученику', verbose_name='Условие задания')),
                ('student_answer', models.TextField(blank=True, help_text='Введите ответ ученика', null=True, verbose_name='Ответ ученика')),
                ('grade', models.FloatField(blank=True, help_text='Введите оценку за задание (от 0 до 10)', null=True, verbose_name='Оценка (из 10)')),
                ('ai_feedback', models.TextField(blank=True, help_text='Комментарий, сгенерированный системой Islam AI Checker', null=True, verbose_name='Комментарий от Islam AI Checker')),
                ('originality_check', models.TextField(blank=True, help_text='Проверка, сам ли ученик выполнил задание или использовал AI', null=True, verbose_name='Анализ оригинальности')),
                ('is_checked', models.BooleanField(default=False, verbose_name='Проверено')),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='homework.month1homework', verbose_name='Домашняя работа')),
            ],
            options={
                'verbose_name': 'Пункт задания (1 месяц)',
                'verbose_name_plural': 'Пункты заданий (1 месяц)',
                'ordering': ['id'],
            },
        ),
    ]
