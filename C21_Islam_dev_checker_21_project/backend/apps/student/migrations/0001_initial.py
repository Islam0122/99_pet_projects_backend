# Generated by Django 4.2.24 on 2025-10-24 06:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите название учебной группы (например: Python 101)', max_length=100, verbose_name='Название группы')),
                ('description', models.TextField(blank=True, help_text='Краткое описание или дополнительная информация о группе', null=True, verbose_name='Описание группы')),
                ('telegram_id', models.CharField(help_text='Введите уникальный Telegram ID группы', max_length=50, unique=True, verbose_name='ID Telegram-группы')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Введите имя и фамилию студента', max_length=100, verbose_name='Полное имя')),
                ('username', models.CharField(blank=True, help_text='Укажите Telegram username (без @), если есть', max_length=50, null=True, verbose_name='Имя пользователя в Telegram')),
                ('telegram_id', models.CharField(help_text='Введите уникальный Telegram ID студента', max_length=50, unique=True, verbose_name='ID Telegram пользователя')),
                ('total_homeworks', models.PositiveIntegerField(default=0, help_text='Общее количество заданий, выданных студенту', verbose_name='Всего домашних заданий')),
                ('completed_homeworks', models.PositiveIntegerField(default=0, help_text='Количество заданий, успешно выполненных студентом', verbose_name='Выполненные задания')),
                ('last_homework_done', models.DateTimeField(blank=True, help_text='Дата и время последнего выполненного задания', null=True, verbose_name='Последнее выполненное задание')),
                ('average_score', models.FloatField(default=0.0, help_text='Средний балл по всем сданным заданиям', verbose_name='Средний балл')),
                ('best_score', models.FloatField(default=0.0, help_text='Максимальный балл, полученный студентом за домашние задания', verbose_name='Лучший балл')),
                ('total_points', models.FloatField(default=0.0, help_text='Сумма всех полученных баллов студента', verbose_name='Общее количество баллов')),
                ('rank', models.PositiveIntegerField(default=0, help_text='Позиция студента в рейтинге группы', verbose_name='Рейтинг в группе')),
                ('progress_level', models.CharField(default='Новичок', help_text="Статус студента: например, 'Новичок', 'Продвинутый', 'Лидер'", max_length=50, verbose_name='Уровень прогресса')),
                ('is_active', models.BooleanField(default=True, help_text='Отображает, активен ли студент в учебной программе', verbose_name='Активен')),
                ('group', models.ForeignKey(help_text='Выберите группу, в которой учится студент', on_delete=django.db.models.deletion.CASCADE, related_name='students', to='student.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
                'ordering': ['full_name'],
            },
        ),
    ]
