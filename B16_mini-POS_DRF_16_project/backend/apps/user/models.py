from django.contrib.auth.models import AbstractUser, BaseUserManager
from django.db import models
from django.utils.crypto import get_random_string
from django.core.mail import send_mail
from django.utils.html import strip_tags


class UserManager(BaseUserManager):
    def create_user(self, email, username=None, password=None, **extra_fields):
        if not email:
            raise ValueError("Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")
        email = self.normalize_email(email)
        user = self.model(email=email, username=username or email, **extra_fields)
        user.set_password(password)
        user.save(using=self._db)
        return user

    def create_superuser(self, email, username=None, password=None, **extra_fields):
        extra_fields.setdefault("is_staff", True)
        extra_fields.setdefault("is_superuser", True)
        extra_fields.setdefault("role", "admin")
        extra_fields.setdefault("is_active", True)
        return self.create_user(email=email, username=username, password=password, **extra_fields)


class User(AbstractUser):
    fullname = models.CharField(max_length=255, verbose_name="–ü–æ–ª–Ω–æ–µ –∏–º—è")
    is_allowed = models.BooleanField(default=True, verbose_name="–†–∞–∑—Ä–µ—à–µ–Ω")

    ROLE_CHOICES = [
        ("cashier", "–ö–∞—Å—Å–∏—Ä"),
        ("admin", "–ê–¥–º–∏–Ω"),
    ]
    role = models.CharField(max_length=20, choices=ROLE_CHOICES, default="cashier")
    is_active = models.BooleanField(default=True)
    email = models.EmailField(unique=True, verbose_name="Email")
    USERNAME_FIELD = "email"
    REQUIRED_FIELDS = ["username"]

    objects = UserManager()

    def set_random_password_and_notify(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –µ–≥–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email"""
        password = get_random_string(10)
        self.set_password(password)
        self.save()
        self.send_welcome_email(password)

    def send_welcome_email(self, password):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –≤—Ö–æ–¥–∞"""
        if not self.email:
            return

        subject = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MINI-POS!"

        html_message = f"""
        <h2>–ü—Ä–∏–≤–µ—Ç, {self.username}! üëã</h2>

        <p>–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ —Å–∏—Å—Ç–µ–º–µ <b>MINI-POS</b>! üéâ</p>

        <p><b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:</b></p>
        <ul>
            <li><b>–õ–æ–≥–∏–Ω:</b> {self.email}</li>
            <li><b>–ü–∞—Ä–æ–ª—å:</b> {password}</li>
        </ul>

        <p style="color: red;"><b>‚ö†Ô∏è –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º!</b></p>

        <p>–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏. ü§ù</p>

        <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
        Islam Dev (<a href="mailto:duishobaevislam01@gmail.com">duishobaevislam01@gmail.com</a>) üöÄ</p>
        """

        plain_message = strip_tags(html_message)

        send_mail(
            subject=subject,
            message=plain_message,
            from_email="duishobaevislam01@gmail.com",
            recipient_list=[self.email],
            html_message=html_message,
        )

    class Meta:
        verbose_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        verbose_name_plural = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
